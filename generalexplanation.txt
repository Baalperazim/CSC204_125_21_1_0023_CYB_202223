In the "node.py" file, we define the Node class. This class is responsible for storing data and a link to the next node. The constructor initializes the data and sets the next node link to None by default.

In the "singly_linked_list.py" file, we define the SingleLinkedList class. This class represents a singly linked list data structure. The constructor initializes the linked list with an empty head node, which points to None.

The "insert" method in the SingleLinkedList class is used to insert a new node with the given data at the end of the linked list. If the list is empty, the new node becomes the head of the list. Otherwise, we traverse the list to find the last node and then link the new node to it.

The "display" method is used to print the elements of the linked list in a human-readable format. It traverses the list, collects the data of each node, and prints them as a list.

In the "main.py" file, we import the SingleLinkedList class and create an instance of it.

We test the "insert" method by inserting elements from the given list [1,3,4,5,6,8,7,9,2,22,15,55,45,23,24,26,28] into the linked list.

Finally, we test the "display" method to see the elements of the linked list printed as a list.

By following these steps and running the "main.py" file, you should see the linked list elements printed as [1, 3, 4, 5, 6, 8, 7, 9, 2, 22, 15, 55, 45, 23, 24, 26, 28].




